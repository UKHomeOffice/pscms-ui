---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.PSCMS_UI_NAME}}
  labels:
    service: {{.PSCMS_UI_NAME}}
spec:
  selector:
    matchLabels:
      name: {{.PSCMS_UI_NAME}}
  replicas: 3
  revisionHistoryLimit: 3
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        name: {{.PSCMS_UI_NAME}}
        service: {{.PSCMS_UI_NAME}}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - {{.PSCMS_UI_NAME}}
              topologyKey: failure-domain.beta.kubernetes.io/zone
      restartPolicy: Always
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: {{.PSCMS_UI_NAME}}
        image: {{.PSCMS_UI_IMAGE}}:{{.PSCMS_UI_TAG}}
        imagePullPolicy: Always
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
        command: ["/bin/sh"]
        args: ["-c", "/app/run.sh -Djava.security.egd=file:/dev/./urandom -Djavax.net.ssl.keyStore=/etc/keystore/keystore.p12 -Djavax.net.ssl.keyStorePassword=changeit -Djavax.net.ssl.trustStore=/etc/keystore/cacerts -Djavax.net.ssl.trustStoreType=pkcs12 -Djavax.net.ssl.trustStorePassword=changeit -jar /app/workflow-ui.jar"]
        resources:
          requests:
            memory: "1024Mi"
            cpu: "1000m"
          limits:
            memory: "1024Mi"
            cpu: "1000m"
        ports:
          - name: https
            containerPort: 8443
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /actuator/info
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
        env:
          - name: SPRING_PROFILES_ACTIVE
            value: "{{.SPRING_PROFILES_ACTIVE}}"
          - name: AWS_REGION
            value: "{{.AWS_REGION}}"
          - name: AWS_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: {{.PSCMS_UI_NAME}}
                key: awsAccessKeyId
          - name: AWS_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{.PSCMS_UI_NAME}}
                key: awsSecretAccessKey
          - name: AWS_SECRETS_MANAGER_ENABLED
            value: "{{.AWS_SECRETS_MANAGER_ENABLED}}"
        volumeMounts:
          - name: certs
            mountPath: /certs
            readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: "{{.PSCMS_UI_NAME}}-pod-cmio"
